apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-pkgsite
  labels:
    {{- include "go-pkgsite.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "go-pkgsite.selectors" . | nindent 6 }}
      app.kubernetes.io/component: pkgsite
  template:
    metadata:
      labels:
        {{- include "go-pkgsite.labels" . | nindent 8 }}
        app.kubernetes.io/component: pkgsite
      annotations:
        checksum/secret: {{ include (print .Template.BasePath "/secret.yaml") . | fromYaml | dig "stringData" "" | toYaml | sha256sum }}
    spec:
      initContainers:

      # Wait until PostgreSQL is ready
      - name: wait-for-db
        image: {{ include "postgresql.v1.image" .Subcharts.postgresql }}
        env:
        - name: PGHOST
          value: '{{ include "postgresql.v1.primary.fullname" .Subcharts.postgresql }}'
        - name: PGPASSWORD
          {{- include "go-pkgsite.pgpasswd" . | nindent 10 }}
        command: [sh, -c, 'until pg_isready -U postgres; do echo waiting for database; sleep 1; done;']

      # Create DB if it doesn't exist
      - name: create-db
        image: &go-pkgsite 'mxkh/go-pkgsite:{{ .Chart.Version }}'
        env: {{- include "go-pkgsite.env" . | nindent 8 }}
        command: [./db, create]

      # Migrate DB schema
      - name: migrate-db
        image: *go-pkgsite
        env: {{- include "go-pkgsite.env" . | nindent 8 }}
        command:
        - ./migrate
        - -source=file:migrations
        - -database=postgresql://postgres:$(GO_DISCOVERY_DATABASE_PASSWORD)@$(GO_DISCOVERY_DATABASE_HOST):5432/discovery-db?sslmode=disable
        - up

      {{- if .Values.seed }}
      # Pre-populate packages
      - name: seed-db
        image: *go-pkgsite
        env: {{- include "go-pkgsite.env" . | nindent 8 }}
        volumeMounts: [{name: seed, mountPath: /seed, readOnly: true}]
        command: [./seeddb, -bypass_license_check, -keep_going, -refetch, -seed=/seed/seed.txt]
      {{- end }}

      containers:
      - name: frontend
        image: *go-pkgsite
        env:
        {{- if .Values.private }}
        - {name: HTTP_PROXY, value: http://localhost:8080}
        - {name: HTTPS_PROXY, value: http://localhost:8080}
        {{- end }}
        {{- include "go-pkgsite.env" . | nindent 8 }}
        command: [./frontend, -bypass_license_check, -host=:80, -local, -proxy_url=$(GO_MODULE_PROXY_URL)]
        ports: [{name: http, containerPort: 80}]
        startupProbe:
          httpGet: {port: http}
          periodSeconds: 1
          failureThreshold: 60
        livenessProbe:
          httpGet: {port: http}
          failureThreshold: 3
        readinessProbe:
          httpGet: {port: http}
          failureThreshold: 1

      {{- if .Values.private }}
      - name: netrc-proxy
        image: *go-pkgsite
        volumeMounts: [{name: netrc, mountPath: /etc/netrc, readOnly: true}]
        command: [./proxy, -host=:8080, -netrc=/etc/netrc/.netrc]
        startupProbe:
          httpGet: {port: 8080}
          periodSeconds: 1
          failureThreshold: 30
        livenessProbe:
          httpGet: {port: 8080}
          failureThreshold: 3
        readinessProbe:
          httpGet: {port: 8080}
          failureThreshold: 1
      {{- end }}

      volumes:
      - name: netrc
        secret:
          secretName: {{ .Release.Name }}
          items: [{key: .netrc, path: .netrc}]
      {{- if .Values.seed }}
      - name: seed
        secret:
          secretName: {{ .Release.Name }}
          items: [{key: seed.txt, path: seed.txt}]
      {{- end }}
