apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-athens
  labels:
    {{- include "go-pkgsite.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "go-pkgsite.selectors" . | nindent 6 }}
      app.kubernetes.io/component: athens
  template:
    metadata:
      labels:
        {{- include "go-pkgsite.labels" . | nindent 8 }}
        app.kubernetes.io/component: athens
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/athens/config.yaml") . | fromYaml | dig "data" "" | toYaml | sha256sum }}
        checksum/netrc: {{ include (print .Template.BasePath "/secret.yaml") . | fromYaml | dig "stringData" ".netrc" "" | toYaml | sha256sum }}
    spec:
      containers:
      - name: athens
        image: gomods/athens:v0.14.0
        volumeMounts:
        - {name: config, mountPath: /config, readOnly: true}
        - {name: storage, mountPath: /var/lib/athens}
        ports: [{name: http, containerPort: 80}]
        startupProbe:
          httpGet: {path: /healthz, port: http}
          periodSeconds: 1
          failureThreshold: 60
        livenessProbe:
          httpGet: {path: /healthz, port: http}
          failureThreshold: 3
        readinessProbe:
          httpGet: {path: /readyz, port: http}
          failureThreshold: 1

      volumes:
      - name: config
        projected:
          sources:
          - configMap:
              name: {{ .Release.Name }}-athens
          - secret:
              name: {{ .Release.Name }}
              items: [{key: .netrc, path: .netrc}]
      - name: storage
        emptyDir: {}
